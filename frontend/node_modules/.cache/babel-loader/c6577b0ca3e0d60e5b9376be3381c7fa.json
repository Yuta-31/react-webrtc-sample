{"ast":null,"code":"var _jsxFileName = \"/Users/yuta/Documents/work/web-rtc/frontend/src/VideoConnect.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VideoView() {\n  _s();\n\n  const localVideoRef = React.useRef(null);\n  const remoteVideoRef = React.useRef(null);\n  const localPeerConnection = null;\n  const remotePeerConnection = null;\n  const localStream = null;\n  const constraints = {\n    video: true,\n    audio: false\n  };\n  const offerOptions = {\n    offerToReceiveVideo: 1\n  };\n\n  function getLocalStream(stream) {\n    localStream = stream;\n    localVideoRef.current.srcObject = stream;\n  }\n\n  function getRemoteStream(stream) {\n    remoteVideoRef.current.srcObject = stream;\n  }\n\n  function handleConnection(event) {\n    const peerConnection = event.target;\n    const iceCandidate = event.candidate;\n\n    if (iceCandidate) {\n      const newIceCandidate = new RTCIceCandidate(iceCandidate);\n      const otherPeer = peerConnection === localPeerConnection ? remotePeerConnection : localPeerConnection;\n      otherPeer.addIceCandidate(newIceCandidate).then(() => {\n        console.log(\"connection success\");\n      }).catch(() => {\n        console.log(\"connection failure\");\n      });\n    }\n  }\n\n  function handleConnectionChange(event) {\n    console.log('connection change success');\n  }\n\n  function createdOffer(description) {\n    localPeerConnection.setLocalDescription(description).then(() => {\n      console.log(\"LocalPeerConnection success\");\n    }).catch(() => {\n      console.log(\"LocalPeerConnection Failure\");\n    });\n    remotePeerConnection.setRemoteDescription(description).then(() => {\n      console.log(\"RemotePeerConnection Success\");\n    }).catch(() => {\n      console.log(\"RemotePeerConnection Failure\");\n    });\n    remotePeerConnection.createAnswer().then(createdAnswer).catch(() => {\n      console.log(\"RemoteCreateAnswer Failure\");\n    });\n  }\n\n  function createdAnswer(description) {\n    remotePeerConnection.setLocalDescription(description).then(() => {\n      console.log(\"RemotePeer set LocalDescription Success\");\n    }).catch(() => {\n      console.log(\"RemotePeer set LocalDescription Success\");\n    });\n    localPeerConnection.setRemoteDescription(description).then(() => {\n      console.log(\"LocalPeer set RemoteDescription Success\");\n    }).catch(() => {\n      console.log(\"LocalPeer set RemoteDescription Success\");\n    });\n  }\n\n  function calling() {\n    localPeerConnection = new RTCPeerConnection(null);\n    localPeerConnection.addEventListener('icecandidate', handleconnection);\n    localPeerConnection.addEventListener('iceconnectionstatechange', handleConnectionChange);\n    remotePeerConnection = new RTCPeerConnection(null);\n    remotePeerConnection.addEventListener('icecandidate', handleConnection);\n    remotePeerConnection.addEventListener('iceconnectionstatechange', handleConnectionChange);\n    remotePeerConnection.addEventListener('addstream', getRemoteStream);\n    localPeerConnection.addStream(localStream);\n    localPeerConnection.createOffer(offerOptions).then(createdOffer).catch(error => {\n      console.log('createOffer Error', error);\n    });\n  }\n\n  React.useEffect(() => {\n    navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n      videoRef.current.srcObject = stream;\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VideoView\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      playsInline: true,\n      autoPlay: true,\n      ref: localVideoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      playsInline: true,\n      autoPlay: true,\n      ref: remoteVideoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoView, \"N2srizIvyzpmB0sxnI19Qk2jMcY=\");\n\n_c = VideoView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoView\");","map":{"version":3,"sources":["/Users/yuta/Documents/work/web-rtc/frontend/src/VideoConnect.js"],"names":["React","VideoView","localVideoRef","useRef","remoteVideoRef","localPeerConnection","remotePeerConnection","localStream","constraints","video","audio","offerOptions","offerToReceiveVideo","getLocalStream","stream","current","srcObject","getRemoteStream","handleConnection","event","peerConnection","target","iceCandidate","candidate","newIceCandidate","RTCIceCandidate","otherPeer","addIceCandidate","then","console","log","catch","handleConnectionChange","createdOffer","description","setLocalDescription","setRemoteDescription","createAnswer","createdAnswer","calling","RTCPeerConnection","addEventListener","handleconnection","addStream","createOffer","error","useEffect","navigator","mediaDevices","getUserMedia","videoRef"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport default function VideoView() {\n  const localVideoRef = React.useRef(null);\n  const remoteVideoRef = React.useRef(null);\n\n  const localPeerConnection = null;\n  const remotePeerConnection = null;\n\n  const localStream = null;\n\n  const constraints = {\n    video: true,\n    audio: false,\n  }\n\n  const offerOptions = {\n    offerToReceiveVideo: 1,\n  }\n\n  function getLocalStream(stream) {\n    localStream = stream;\n    localVideoRef.current.srcObject = stream;\n  }\n  function getRemoteStream(stream) {\n    remoteVideoRef.current.srcObject = stream;\n  }\n  function handleConnection(event) {\n    const peerConnection = event.target;\n    const iceCandidate = event.candidate;\n\n    if (iceCandidate) {\n      const newIceCandidate = new RTCIceCandidate(iceCandidate);\n      const otherPeer = (peerConnection === localPeerConnection) ? remotePeerConnection : localPeerConnection;\n      otherPeer.addIceCandidate(newIceCandidate)\n        .then(() => {\n          console.log(\"connection success\");\n        })\n        .catch(() => {\n          console.log(\"connection failure\");\n        });\n    }\n  }\n  function handleConnectionChange(event) {\n    console.log('connection change success');\n  }\n  function createdOffer(description) {\n    localPeerConnection.setLocalDescription(description)\n      .then(() => {\n        console.log(\"LocalPeerConnection success\");\n      })\n      .catch(() => {\n        console.log(\"LocalPeerConnection Failure\");\n      })\n\n    remotePeerConnection.setRemoteDescription(description)\n      .then(() => {\n        console.log(\"RemotePeerConnection Success\");\n      })\n      .catch(() => {\n        console.log(\"RemotePeerConnection Failure\");\n      })\n\n    remotePeerConnection.createAnswer()\n      .then(createdAnswer)\n      .catch(() => {\n        console.log(\"RemoteCreateAnswer Failure\");\n      })\n  }\n  function createdAnswer(description) {\n    remotePeerConnection.setLocalDescription(description)\n      .then(() => {\n        console.log(\"RemotePeer set LocalDescription Success\");\n      })\n      .catch(() => {\n        console.log(\"RemotePeer set LocalDescription Success\");\n      });\n\n    localPeerConnection.setRemoteDescription(description)\n    .then(() => {\n      console.log(\"LocalPeer set RemoteDescription Success\");\n    })\n    .catch(() => {\n      console.log(\"LocalPeer set RemoteDescription Success\");\n    });\n  }\n  function calling() {\n    localPeerConnection = new RTCPeerConnection(null);\n    localPeerConnection.addEventListener('icecandidate', handleconnection);\n    localPeerConnection.addEventListener('iceconnectionstatechange', handleConnectionChange)\n\n    remotePeerConnection = new RTCPeerConnection(null);\n    remotePeerConnection.addEventListener('icecandidate', handleConnection);\n    remotePeerConnection.addEventListener('iceconnectionstatechange', handleConnectionChange);\n    remotePeerConnection.addEventListener('addstream', getRemoteStream);\n\n    localPeerConnection.addStream(localStream);\n\n    localPeerConnection.createOffer(offerOptions)\n      .then(createdOffer)\n      .catch((error) => {\n        console.log('createOffer Error', error);\n      })\n  }\n\n\n  React.useEffect(() => {\n    navigator.mediaDevices.getUserMedia(constraints)\n      .then((stream) => {\n        videoRef.current.srcObject = stream;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"VideoView\">\n      <video playsInline autoPlay ref={localVideoRef} />\n      <video playsInline autoPlay ref={remoteVideoRef} />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}