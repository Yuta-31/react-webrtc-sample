{"ast":null,"code":"var _jsxFileName = \"/Users/yuta/Documents/work/web-rtc/frontend/src/VideoView.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VideoView() {\n  _s();\n\n  const videoRef = React.useRef(null);\n  React.useEffect(() => {\n    navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n      videoRef.current.srcObject = stream;\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VideoView\",\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      playsInline: true,\n      autoPlay: true,\n      ref: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoView, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n\n_c = VideoView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoView\");","map":{"version":3,"sources":["/Users/yuta/Documents/work/web-rtc/frontend/src/VideoView.js"],"names":["React","VideoView","videoRef","useRef","useEffect","navigator","mediaDevices","getUserMedia","constraints","then","stream","current","srcObject","catch","error","console","log"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa,IAAb,CAAjB;AAEAH,EAAAA,KAAK,CAACI,SAAN,CAAgB,MAAM;AACpBC,IAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCC,WAApC,EACGC,IADH,CACSC,MAAD,IAAY;AAChBR,MAAAA,QAAQ,CAACS,OAAT,CAAiBC,SAAjB,GAA6BF,MAA7B;AACD,KAHH,EAIGG,KAJH,CAIUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KANH;AAOD,GARD,EAQG,EARH;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAO,MAAA,WAAW,MAAlB;AAAmB,MAAA,QAAQ,MAA3B;AAA4B,MAAA,GAAG,EAAEZ;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlBuBD,S;;KAAAA,S","sourcesContent":["\nimport React from 'react';\n\nexport default function VideoView() {\n  const videoRef = React.useRef(null);\n\n  React.useEffect(() => {\n    navigator.mediaDevices.getUserMedia(constraints)\n      .then((stream) => {\n        videoRef.current.srcObject = stream;\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }, []);\n\n  return (\n    <div className=\"VideoView\">\n      <video playsInline autoPlay ref={videoRef} />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}