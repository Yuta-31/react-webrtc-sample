{"ast":null,"code":"var _jsxFileName = \"/Users/yuta/Documents/work/web-rtc/frontend/src/VideoConnect.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Video.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VideoView() {\n  _s();\n\n  const localVideoRef = React.useRef(null);\n  const remoteVideoRef = React.useRef(null);\n  const constraints = {\n    video: true,\n    audio: false\n  };\n  const offerOptions = {\n    offerToReceiveVideo: 1\n  };\n  var localPeerConnection = null;\n  var remotePeerConnection = null;\n  var localStream = null;\n\n  function getRemoteStream(event) {\n    console.log(event.stream);\n    remoteVideoRef.current.srcObject = event.stream;\n  }\n\n  function handleConnection(event) {\n    const peerConnection = event.target;\n    const iceCandidate = event.candidate;\n\n    if (iceCandidate) {\n      const newIceCandidate = new RTCIceCandidate(iceCandidate);\n      const otherPeer = peerConnection === localPeerConnection ? remotePeerConnection : localPeerConnection;\n      otherPeer.addIceCandidate(newIceCandidate).then(() => {\n        console.log(\"connection success\");\n      }).catch(() => {\n        console.log(\"connection failure\");\n      });\n    }\n  }\n\n  function handleConnectionChange(event) {\n    console.log('connection change success');\n  }\n\n  function createdOffer(description) {\n    localPeerConnection.setLocalDescription(description).then(() => {\n      console.log(\"LocalPeerConnection success\");\n    }).catch(() => {\n      console.log(\"LocalPeerConnection Failure\");\n    });\n    remotePeerConnection.setRemoteDescription(description).then(() => {\n      console.log(\"RemotePeerConnection Success\");\n    }).catch(() => {\n      console.log(\"RemotePeerConnection Failure\");\n    });\n    remotePeerConnection.createAnswer().then(createdAnswer).catch(() => {\n      console.log(\"RemoteCreateAnswer Failure\");\n    });\n  }\n\n  function createdAnswer(description) {\n    remotePeerConnection.setLocalDescription(description).then(() => {\n      console.log(\"RemotePeer set LocalDescription Success\");\n    }).catch(() => {\n      console.log(\"RemotePeer set LocalDescription Success\");\n    });\n    localPeerConnection.setRemoteDescription(description).then(() => {\n      console.log(\"LocalPeer set RemoteDescription Success\");\n    }).catch(() => {\n      console.log(\"LocalPeer set RemoteDescription Success\");\n    });\n  }\n\n  function calling() {\n    localPeerConnection = new RTCPeerConnection(null);\n    localPeerConnection.addEventListener('icecandidate', handleConnection);\n    localPeerConnection.addEventListener('iceconnectionstatechange', handleConnectionChange);\n    remotePeerConnection = new RTCPeerConnection(null);\n    remotePeerConnection.addEventListener('icecandidate', handleConnection);\n    remotePeerConnection.addEventListener('iceconnectionstatechange', handleConnectionChange);\n    remotePeerConnection.addEventListener('addstream', getRemoteStream);\n    localPeerConnection.addStream(localStream);\n    localPeerConnection.createOffer(offerOptions).then(createdOffer).catch(error => {\n      console.log('createOffer Error', error);\n    });\n  }\n\n  React.useEffect(() => {\n    navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n      localStream = stream;\n      localVideoRef.current.srcObject = stream;\n    }).catch(error => {\n      console.log(\"ERROR\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VideoView\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      playsInline: true,\n      autoPlay: true,\n      ref: localVideoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      playsInline: true,\n      autoPlay: true,\n      ref: remoteVideoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calling,\n      children: \"CALL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoView, \"N2srizIvyzpmB0sxnI19Qk2jMcY=\");\n\n_c = VideoView;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoView\");","map":{"version":3,"sources":["/Users/yuta/Documents/work/web-rtc/frontend/src/VideoConnect.js"],"names":["React","VideoView","localVideoRef","useRef","remoteVideoRef","constraints","video","audio","offerOptions","offerToReceiveVideo","localPeerConnection","remotePeerConnection","localStream","getRemoteStream","event","console","log","stream","current","srcObject","handleConnection","peerConnection","target","iceCandidate","candidate","newIceCandidate","RTCIceCandidate","otherPeer","addIceCandidate","then","catch","handleConnectionChange","createdOffer","description","setLocalDescription","setRemoteDescription","createAnswer","createdAnswer","calling","RTCPeerConnection","addEventListener","addStream","createOffer","error","useEffect","navigator","mediaDevices","getUserMedia"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,aAAa,GAAGF,KAAK,CAACG,MAAN,CAAa,IAAb,CAAtB;AACA,QAAMC,cAAc,GAAGJ,KAAK,CAACG,MAAN,CAAa,IAAb,CAAvB;AACA,QAAME,WAAW,GAAG;AAClBC,IAAAA,KAAK,EAAE,IADW;AAElBC,IAAAA,KAAK,EAAE;AAFW,GAApB;AAIA,QAAMC,YAAY,GAAG;AACnBC,IAAAA,mBAAmB,EAAE;AADF,GAArB;AAGA,MAAIC,mBAAmB,GAAG,IAA1B;AACA,MAAIC,oBAAoB,GAAG,IAA3B;AACA,MAAIC,WAAW,GAAG,IAAlB;;AAEA,WAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACAb,IAAAA,cAAc,CAACc,OAAf,CAAuBC,SAAvB,GAAmCL,KAAK,CAACG,MAAzC;AACD;;AACD,WAASG,gBAAT,CAA0BN,KAA1B,EAAiC;AAC/B,UAAMO,cAAc,GAAGP,KAAK,CAACQ,MAA7B;AACA,UAAMC,YAAY,GAAGT,KAAK,CAACU,SAA3B;;AAEA,QAAID,YAAJ,EAAkB;AAChB,YAAME,eAAe,GAAG,IAAIC,eAAJ,CAAoBH,YAApB,CAAxB;AACA,YAAMI,SAAS,GAAIN,cAAc,KAAKX,mBAApB,GAA2CC,oBAA3C,GAAkED,mBAApF;AACAiB,MAAAA,SAAS,CAACC,eAAV,CAA0BH,eAA1B,EACGI,IADH,CACQ,MAAM;AACVd,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,OAHH,EAIGc,KAJH,CAIS,MAAM;AACXf,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,OANH;AAOD;AACF;;AACD,WAASe,sBAAT,CAAgCjB,KAAhC,EAAuC;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;;AACD,WAASgB,YAAT,CAAsBC,WAAtB,EAAmC;AACjCvB,IAAAA,mBAAmB,CAACwB,mBAApB,CAAwCD,WAAxC,EACGJ,IADH,CACQ,MAAM;AACVd,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,KAHH,EAIGc,KAJH,CAIS,MAAM;AACXf,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,KANH;AAQAL,IAAAA,oBAAoB,CAACwB,oBAArB,CAA0CF,WAA1C,EACGJ,IADH,CACQ,MAAM;AACVd,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD,KAHH,EAIGc,KAJH,CAIS,MAAM;AACXf,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD,KANH;AAQAL,IAAAA,oBAAoB,CAACyB,YAArB,GACGP,IADH,CACQQ,aADR,EAEGP,KAFH,CAES,MAAM;AACXf,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,KAJH;AAKD;;AACD,WAASqB,aAAT,CAAuBJ,WAAvB,EAAoC;AAClCtB,IAAAA,oBAAoB,CAACuB,mBAArB,CAAyCD,WAAzC,EACGJ,IADH,CACQ,MAAM;AACVd,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD,KAHH,EAIGc,KAJH,CAIS,MAAM;AACXf,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD,KANH;AAQAN,IAAAA,mBAAmB,CAACyB,oBAApB,CAAyCF,WAAzC,EACCJ,IADD,CACM,MAAM;AACVd,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD,KAHD,EAICc,KAJD,CAIO,MAAM;AACXf,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD,KAND;AAOD;;AACD,WAASsB,OAAT,GAAmB;AACjB5B,IAAAA,mBAAmB,GAAG,IAAI6B,iBAAJ,CAAsB,IAAtB,CAAtB;AACA7B,IAAAA,mBAAmB,CAAC8B,gBAApB,CAAqC,cAArC,EAAqDpB,gBAArD;AACAV,IAAAA,mBAAmB,CAAC8B,gBAApB,CAAqC,0BAArC,EAAiET,sBAAjE;AAEApB,IAAAA,oBAAoB,GAAG,IAAI4B,iBAAJ,CAAsB,IAAtB,CAAvB;AACA5B,IAAAA,oBAAoB,CAAC6B,gBAArB,CAAsC,cAAtC,EAAsDpB,gBAAtD;AACAT,IAAAA,oBAAoB,CAAC6B,gBAArB,CAAsC,0BAAtC,EAAkET,sBAAlE;AACApB,IAAAA,oBAAoB,CAAC6B,gBAArB,CAAsC,WAAtC,EAAmD3B,eAAnD;AAEAH,IAAAA,mBAAmB,CAAC+B,SAApB,CAA8B7B,WAA9B;AAEAF,IAAAA,mBAAmB,CAACgC,WAApB,CAAgClC,YAAhC,EACGqB,IADH,CACQG,YADR,EAEGF,KAFH,CAEUa,KAAD,IAAW;AAChB5B,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC2B,KAAjC;AACD,KAJH;AAKD;;AAGD3C,EAAAA,KAAK,CAAC4C,SAAN,CAAgB,MAAM;AACpBC,IAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC1C,WAApC,EACGwB,IADH,CACSZ,MAAD,IAAY;AAChBL,MAAAA,WAAW,GAAGK,MAAd;AACAf,MAAAA,aAAa,CAACgB,OAAd,CAAsBC,SAAtB,GAAkCF,MAAlC;AACD,KAJH,EAKGa,KALH,CAKUa,KAAD,IAAW;AAChB5B,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB2B,KAArB;AACD,KAPH;AAQD,GATD,EASG,EATH;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAO,MAAA,WAAW,MAAlB;AAAmB,MAAA,QAAQ,MAA3B;AAA4B,MAAA,GAAG,EAAEzC;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,WAAW,MAAlB;AAAmB,MAAA,QAAQ,MAA3B;AAA4B,MAAA,GAAG,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFF,oBAEsD;AAAA;AAAA;AAAA;AAAA,YAFtD,eAGE;AAAQ,MAAA,OAAO,EAAEkC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAnHuBrC,S;;KAAAA,S","sourcesContent":["import React from 'react';\nimport './Video.css';\n\nexport default function VideoView() {\n  const localVideoRef = React.useRef(null);\n  const remoteVideoRef = React.useRef(null);\n  const constraints = {\n    video: true,\n    audio: false,\n  }\n  const offerOptions = {\n    offerToReceiveVideo: 1,\n  }\n  var localPeerConnection = null;\n  var remotePeerConnection = null;\n  var localStream = null;\n\n  function getRemoteStream(event) {\n    console.log(event.stream);\n    remoteVideoRef.current.srcObject = event.stream;\n  }\n  function handleConnection(event) {\n    const peerConnection = event.target;\n    const iceCandidate = event.candidate;\n\n    if (iceCandidate) {\n      const newIceCandidate = new RTCIceCandidate(iceCandidate);\n      const otherPeer = (peerConnection === localPeerConnection) ? remotePeerConnection : localPeerConnection;\n      otherPeer.addIceCandidate(newIceCandidate)\n        .then(() => {\n          console.log(\"connection success\");\n        })\n        .catch(() => {\n          console.log(\"connection failure\");\n        });\n    }\n  }\n  function handleConnectionChange(event) {\n    console.log('connection change success');\n  }\n  function createdOffer(description) {\n    localPeerConnection.setLocalDescription(description)\n      .then(() => {\n        console.log(\"LocalPeerConnection success\");\n      })\n      .catch(() => {\n        console.log(\"LocalPeerConnection Failure\");\n      })\n\n    remotePeerConnection.setRemoteDescription(description)\n      .then(() => {\n        console.log(\"RemotePeerConnection Success\");\n      })\n      .catch(() => {\n        console.log(\"RemotePeerConnection Failure\");\n      })\n\n    remotePeerConnection.createAnswer()\n      .then(createdAnswer)\n      .catch(() => {\n        console.log(\"RemoteCreateAnswer Failure\");\n      })\n  }\n  function createdAnswer(description) {\n    remotePeerConnection.setLocalDescription(description)\n      .then(() => {\n        console.log(\"RemotePeer set LocalDescription Success\");\n      })\n      .catch(() => {\n        console.log(\"RemotePeer set LocalDescription Success\");\n      });\n\n    localPeerConnection.setRemoteDescription(description)\n    .then(() => {\n      console.log(\"LocalPeer set RemoteDescription Success\");\n    })\n    .catch(() => {\n      console.log(\"LocalPeer set RemoteDescription Success\");\n    });\n  }\n  function calling() {\n    localPeerConnection = new RTCPeerConnection(null);\n    localPeerConnection.addEventListener('icecandidate', handleConnection);\n    localPeerConnection.addEventListener('iceconnectionstatechange', handleConnectionChange)\n\n    remotePeerConnection = new RTCPeerConnection(null);\n    remotePeerConnection.addEventListener('icecandidate', handleConnection);\n    remotePeerConnection.addEventListener('iceconnectionstatechange', handleConnectionChange);\n    remotePeerConnection.addEventListener('addstream', getRemoteStream);\n\n    localPeerConnection.addStream(localStream);\n\n    localPeerConnection.createOffer(offerOptions)\n      .then(createdOffer)\n      .catch((error) => {\n        console.log('createOffer Error', error);\n      })\n  }\n\n\n  React.useEffect(() => {\n    navigator.mediaDevices.getUserMedia(constraints)\n      .then((stream) => {\n        localStream = stream;\n        localVideoRef.current.srcObject = stream;\n      })\n      .catch((error) => {\n        console.log(\"ERROR\", error);\n      });\n  }, []);\n\n  return (\n    <div className=\"VideoView\">\n      <video playsInline autoPlay ref={localVideoRef} />\n      <video playsInline autoPlay ref={remoteVideoRef} /> <br />\n      <button onClick={calling}>CALL</button>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}