{"ast":null,"code":"var _jsxFileName = \"/Users/yuta/Documents/work/web-rtc/frontend/src/VideoConnect2.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Video.css';\nimport socketClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER = \"http://localhost:3001\";\nconst socket = socketClient(SERVER);\nvar isHost = false;\nvar room = 'hoge';\nconst constraints = {\n  video: true,\n  audio: false\n};\nconst offerOptions = {\n  offerToReceiveVideo: 1\n};\nvar localStream = null;\nvar remoteStream = null;\nvar peerConnection = null;\nvar isStarted = false;\nlet config = {\n  \"iceServers\": [{\n    \"urls\": \"stun:stun.l.google.com:19302\"\n  }, {\n    \"urls\": \"stun:stun1.l.google.com:19302\"\n  }, {\n    \"urls\": \"stun:stun2.l.google.com:19302\"\n  }]\n};\nexport default function VideoConnect2() {\n  _s();\n\n  const localVideoRef = React.useRef(null);\n  const remoteVideoRef = React.useRef(null);\n  const [isKnocking, setIsKnocking] = React.useState(false);\n  const [canCalling, setCanCalling] = React.useState(false);\n  socket.on('knocked response', (numClients, room) => {\n    if (numClients === 0) {\n      socket.emit('create', room);\n    } else if (numClients === 1) {\n      socket.emit('join', room);\n    } else {\n      console.log(\"room [\" + room + \"] is full.\");\n    }\n  });\n  socket.on('created', room => {\n    console.log('[Server said] you created room [' + room + ']');\n    isHost = true;\n\n    if (!isStarted) {\n      startConnect();\n    }\n  });\n  socket.on('joined', (room, id) => {\n    console.log('[Server said] ' + id + ' joined room [' + room + ']');\n\n    if (isHost) {\n      setIsKnocking(true);\n    } else {\n      if (!isStarted) {\n        startConnect();\n      }\n    }\n  });\n  socket.on('allowed', () => {\n    console.log('allowed!');\n    console.log(remoteVideoRef);\n    allowedJoin();\n  });\n  socket.on('offer', description => {\n    console.log('Offer received');\n\n    if (!isHost && !isStarted) {\n      startConnect();\n    }\n\n    peerConnection.setRemoteDescription(description);\n    peerConnection.createAnswer().then(setLocalAndSendMessage).catch(handleAnswerError);\n  });\n  socket.on('answer', description => {\n    console.log('Answer received');\n\n    if (isStarted) {\n      peerConnection.setRemoteDescription(description);\n    }\n  });\n  socket.on('candidate', description => {\n    console.log('candidate Recieved');\n\n    if (isStarted) {\n      peerConnection.addIceCandidate(new RTCIceCandidate({\n        sdpMLineIndex: description.label,\n        candidate: description.candidate\n      }));\n    }\n  });\n\n  function createPeerConnection() {\n    try {\n      peerConnection = new RTCPeerConnection(config);\n      peerConnection.onicecandidate = handleConnection;\n      peerConnection.onaddstream = handleAddStream;\n      peerConnection.onremovestream = handleRemoveStream;\n      console.log('PeerConnection is created');\n    } catch (error) {\n      console.log('[ERROR]', error);\n      return;\n    }\n  }\n\n  function handleConnection(event) {\n    if (event.candidate && peerConnection.signalingState !== 'stable') {\n      console.log(peerConnection.signalingState);\n      socket.emit('message', {\n        type: 'candidate',\n        label: event.candidate.sdpMLineIndex,\n        id: event.candidate.sdpMid,\n        candidate: event.candidate.candidate\n      });\n    } else {\n      console.log(peerConnection);\n      console.log('End of candidates');\n    }\n  }\n\n  function handleAddStream(event) {\n    console.log('add stream');\n    remoteStream = event.stream;\n    console.log(remoteStream);\n  }\n\n  function handleRemoveStream(event) {\n    console.log(event);\n  }\n\n  function startConnect() {\n    createPeerConnection();\n    peerConnection.addStream(localStream);\n    isStarted = true;\n\n    if (!isHost) {\n      peerConnection.createOffer(offerOptions).then(setLocalAndSendMessage).catch(handleOfferError);\n    }\n  }\n\n  function setLocalAndSendMessage(description) {\n    peerConnection.setLocalDescription(description);\n    socket.emit('message', description);\n  }\n\n  function handleOfferError(error) {\n    console.log(\"[ERROR]\", error);\n  }\n\n  function handleAnswerError(error) {\n    console.log(\"[ERROR]\" + error.toString());\n  }\n\n  function allowJoin() {\n    remoteVideoRef.current.srcObject = remoteStream;\n    console.log('allow');\n    socket.emit('allow');\n  }\n\n  function allowedJoin() {\n    remoteVideoRef.current.srcObject = remoteStream;\n  }\n\n  function calling() {\n    socket.emit('knock', room);\n  }\n\n  React.useEffect(() => {\n    navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n      localStream = stream;\n      console.log(localStream);\n      localVideoRef.current.srcObject = stream;\n      setCanCalling(true);\n    }).catch(error => {\n      console.log(\"ERROR\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VideoView\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      playsInline: true,\n      autoPlay: true,\n      ref: localVideoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      playsInline: true,\n      autoPlay: true,\n      ref: remoteVideoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: allowJoin,\n      disabled: !isKnocking,\n      children: \"ALLOW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calling,\n      disabled: !canCalling,\n      children: \"CALL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoConnect2, \"hfH0QN0ldYWlnNrsRfAnlOGduus=\");\n\n_c = VideoConnect2;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoConnect2\");","map":{"version":3,"sources":["/Users/yuta/Documents/work/web-rtc/frontend/src/VideoConnect2.js"],"names":["React","socketClient","SERVER","socket","isHost","room","constraints","video","audio","offerOptions","offerToReceiveVideo","localStream","remoteStream","peerConnection","isStarted","config","VideoConnect2","localVideoRef","useRef","remoteVideoRef","isKnocking","setIsKnocking","useState","canCalling","setCanCalling","on","numClients","emit","console","log","startConnect","id","allowedJoin","description","setRemoteDescription","createAnswer","then","setLocalAndSendMessage","catch","handleAnswerError","addIceCandidate","RTCIceCandidate","sdpMLineIndex","label","candidate","createPeerConnection","RTCPeerConnection","onicecandidate","handleConnection","onaddstream","handleAddStream","onremovestream","handleRemoveStream","error","event","signalingState","type","sdpMid","stream","addStream","createOffer","handleOfferError","setLocalDescription","toString","allowJoin","current","srcObject","calling","useEffect","navigator","mediaDevices","getUserMedia"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Video.css';\nimport socketClient from 'socket.io-client';\n\nconst SERVER = \"http://localhost:3001\";\n\nconst socket = socketClient(SERVER);\n\nvar isHost = false;\nvar room = 'hoge';\n\nconst constraints = {\n  video: true,\n  audio: false,\n}\nconst offerOptions = {\n  offerToReceiveVideo: 1,\n}\n\nvar localStream = null;\nvar remoteStream = null;\nvar peerConnection = null;\nvar isStarted = false;\n\nlet config = {\n  \"iceServers\": [\n    { \"urls\": \"stun:stun.l.google.com:19302\" },\n    { \"urls\": \"stun:stun1.l.google.com:19302\" },\n    { \"urls\": \"stun:stun2.l.google.com:19302\" },\n  ]\n};\n\nexport default function VideoConnect2() {\n  const localVideoRef = React.useRef(null);\n  const remoteVideoRef = React.useRef(null);\n  const [isKnocking, setIsKnocking] = React.useState(false);\n  const [canCalling, setCanCalling] = React.useState(false);\n\n\n  socket.on('knocked response', (numClients, room) => {\n    if (numClients === 0) {\n      socket.emit('create', room);\n    } else if (numClients === 1) {\n      socket.emit('join', room);\n    } else {\n      console.log(\"room [\" + room + \"] is full.\");\n    }\n  });\n  socket.on('created', (room) => {\n    console.log('[Server said] you created room [' + room + ']');\n    isHost = true;\n    if (!isStarted) {\n      startConnect();\n    }\n  });\n  socket.on('joined', (room, id) => {\n    console.log('[Server said] ' + id + ' joined room [' + room + ']');\n    if (isHost) {\n      setIsKnocking(true);\n    } else {\n      if (!isStarted) {\n        startConnect();\n      }\n    }\n  });\n  socket.on('allowed', () => {\n    console.log('allowed!');\n    console.log(remoteVideoRef);\n    allowedJoin();\n  });\n  socket.on('offer', (description) => {\n    console.log('Offer received');\n    if (!isHost && !isStarted) {\n      startConnect();\n    }\n    peerConnection.setRemoteDescription(description);\n    peerConnection.createAnswer()\n      .then(setLocalAndSendMessage)\n      .catch(handleAnswerError);\n  });\n  socket.on('answer', (description) => {\n    console.log('Answer received');\n    if (isStarted) {\n      peerConnection.setRemoteDescription(description);\n    }\n  });\n  socket.on('candidate', (description) => {\n    console.log('candidate Recieved');\n    if (isStarted) {\n      peerConnection.addIceCandidate(\n        new RTCIceCandidate({\n          sdpMLineIndex: description.label,\n          candidate: description.candidate,\n        })\n      );\n    }\n  });\n\n  function createPeerConnection() {\n    try {\n      peerConnection = new RTCPeerConnection( config );\n      peerConnection.onicecandidate = handleConnection;\n      peerConnection.onaddstream = handleAddStream;\n      peerConnection.onremovestream = handleRemoveStream;\n      console.log('PeerConnection is created');\n    } catch (error) {\n      console.log('[ERROR]', error);\n      return;\n    }\n  }\n  function handleConnection(event) {\n    if (event.candidate && peerConnection.signalingState !== 'stable') {\n      console.log(peerConnection.signalingState);\n      socket.emit('message', {\n        type: 'candidate',\n        label: event.candidate.sdpMLineIndex,\n        id: event.candidate.sdpMid,\n        candidate: event.candidate.candidate\n      });\n    } else {\n      console.log(peerConnection);\n      console.log('End of candidates');\n    }\n  }\n  function handleAddStream(event) {\n    console.log('add stream');\n    remoteStream = event.stream;\n    console.log(remoteStream);\n  }\n  function handleRemoveStream(event) {\n    console.log(event);\n  }\n  function startConnect() {\n    createPeerConnection();\n    peerConnection.addStream(localStream);\n    isStarted = true;\n    if (!isHost) {\n      peerConnection.createOffer(offerOptions)\n        .then(setLocalAndSendMessage)\n        .catch(handleOfferError);\n    }\n  }\n  function setLocalAndSendMessage(description) {\n    peerConnection.setLocalDescription(description);\n    socket.emit('message', description);\n  }\n  function handleOfferError(error) {\n    console.log(\"[ERROR]\", error);\n  }\n  function handleAnswerError(error) {\n    console.log(\"[ERROR]\" + error.toString());\n  }\n  function allowJoin() {\n    remoteVideoRef.current.srcObject = remoteStream;\n    console.log('allow');\n    socket.emit('allow');\n  }\n  function allowedJoin() {\n    remoteVideoRef.current.srcObject = remoteStream;\n  }\n  function calling() {\n    socket.emit('knock', room);\n  }\n\n  React.useEffect(() => {\n    navigator.mediaDevices.getUserMedia(constraints)\n      .then((stream) => {\n        localStream = stream;\n        console.log(localStream);\n        localVideoRef.current.srcObject = stream;\n        setCanCalling(true);\n      })\n      .catch((error) => {\n        console.log(\"ERROR\", error);\n      });\n  }, []);\n\n  return (\n    <div className=\"VideoView\">\n      <video playsInline autoPlay ref={localVideoRef} />\n      <video playsInline autoPlay ref={remoteVideoRef} />\n      <br />\n      <button onClick={allowJoin} disabled={!isKnocking}>ALLOW</button>\n      <button onClick={calling} disabled={!canCalling}>CALL</button>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}